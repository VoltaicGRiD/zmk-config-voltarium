#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 35

#define DEFAULT 0
#define QWERTY 1
#define NUM 2
#define FUN 3
#define NAV 4
#define BT 5

/ {
	macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LALT>
                ;
        };
    };

	
	behaviors {
		rot_kp: rot_kp {
			compatible = "zmk,behavior-sensor-rotate";
			#sensor-binding-cells = <0>;
			#binding-cells = <0>;
			tap-ms = <180>;
			bindings = <&kp LEFT>, <&kp RIGHT>;
		};

		rot_pg_ud_kp: rot_pg_ud_kp {
			compatible = "zmk,behavior-sensor-rotate";
			#sensor-binding-cells = <0>;
			#binding-cells = <0>;
			bindings = <&kp PG_DN>, <&kp PG_UP>;
		};

		scroll_encoder_new: scroll_encoder_new {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
			#binding-cells = <0>;
            bindings = <&msc MOVE_UP>, <&msc MOVE_DOWN>;
            tap-ms = <120>;
        };

		scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
			#binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <120>;
        };

		bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		nav_brace: navigation_brace {
			compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&brace_tap>, <&tog NAV>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
		};

		lalt_esc: tap_dance_0 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LALT>, <&kp ESC>;
		};
		
		brace_tap: tap_dance_2 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
			bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
		};

		paren_tap: tap_dance_3 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
				&kp TAB &kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp SEMI &kp MINUS
				&kp LCTRL &kp A &kp R &kp S &kp T &kp D &kp H &kp N &kp E &kp I &kp O &kp APOS
				&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp K &kp M &kp COMMA &kp PERIOD &kp FSLH &mt RALT RETURN	
				&mo BT &lalt_esc &mo NUM &bspc_del &kp LGUI &mo NAV &mo NAV &tog QWERTY &kp SPACE &tog NUM &mo FUN &none
				&kp C_PLAY_PAUSE &kp F1
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		qwerty_layer {
			bindings = <
				&kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp MINUS
				&kp LCTRL &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp APOS
				&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp PERIOD &kp FSLH &mt RALT RETURN	
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		numbers_layer {
			bindings = <
				&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
				&kp TILDE &kp EXCL &kp AT &kp POUND &kp DOLLAR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp UNDER
				&kp PIPE &kp BSLH &kp FSLH &trans &kp LBRC &kp LBKT &kp RBKT &kp RBRC &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		function_layer {
			bindings = <
				&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
				&kp F13 &kp F14 &kp F15 &kp F16 &kp F17 &kp F18 &kp F19 &kp F20 &kp F21 &kp F22 &kp F23 &kp F24
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		navigation_layer {
			bindings = <
				&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &trans &kp HOME &kp UP &kp END &trans &trans
				&bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &bt BT_DISC 5 &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
				&bt BT_CLR &trans &trans &trans &trans &trans &trans &kp C_PREV &kp C_PP &kp C_NEXT &trans &bt BT_CLR_ALL
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		bluetooth_layer {
			bindings = <
				&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR_ALL
				&bt BT_CLR &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};
	};
};

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 0, 11)>;
        };
    };
    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 0, 11)>;
            low-power-enable;
        };
    };
};

&nice_view_spi {
	cs-gpios = <&pro_micro 10 GPIO_ACTIVE_HIGH>;
};
