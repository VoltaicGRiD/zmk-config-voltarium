#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define QWERTY 1
#define NUM 2
#define BT 3

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

/ {
	combos {
        compatible = "zmk,combos";
    };

	macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LALT>
                ;
        };
    };

	behaviors {
		rot_kp: rot_kp {
			compatible = "zmk,behavior-sensor-rotate";
			#sensor-binding-cells = <0>;
			bindings = <&kp K_VOL_DN>, <&kp K_VOL_UP>;
		};

		rot_pg_ud_kp: rot_pg_ud_kp {
			compatible = "zmk,behavior-sensor-rotate";
			#sensor-binding-cells = <0>;
			bindings = <&kp PG_DN>, <&kp PG_UP>;
		};

		scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_UP>, <&msc MOVE_DOWN>;
            tap-ms = <50>;
        };

		bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		tab_num: tap_dance_0 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&tog NUM>;
		};
		
		brace_tap: tap_dance_1 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
		};

		paren_tap: tap_dance_2 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
		};

		alt_tap: tap_dance_3 {
			compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
				&tab_num &kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp SEMI &kp MINUS
				&mt LCTRL ESC &kp A &kp R &kp S &kp T &kp D &kp H &kp N &kp E &kp I &kp O &kp APOS
				&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp K &kp M &kp COMMA &kp PERIOD &kp FSLH &mt RALT RETURN	
				&mo BT &kp LALT &none &bspc_del &kp LGUI &brace_tap &paren_tap &tog QWERTY &kp SPACE &kp RIGHT_PARENTHESIS &none &kp RGUI
				&kp K_PLAY_PAUSE &kp K_MUTE
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		qwerty_layer {
			bindings = <
				&tab_num &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp MINUS
				&mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp APOS
				&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp PERIOD &kp FSLH &mt RALT RETURN	
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};

		numbers_layer {
			bindings = <
				&kp N0 &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp MINUS &kp PLUS
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;

		};

		bluetooth_layer {
			bindings = <
				&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR_ALL
				&bt BT_CLR &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans
			>;
			sensor-bindings = <&scroll_encoder>, <&rot_kp>;
		};
	};
};